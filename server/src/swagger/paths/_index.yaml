/signup:
  post:
    tags:
      - 회원가입
    description: 회원가입
    operationId: addUser
    content: application/json
    requestBody:
      description: 이메일, 패스워드, 닉네임, 프로필, (선호는 따로?)
      required: true
      content:
        application/json:
          schema: 
            $ref: '../components/_index.yaml#/schemas/User'
          examples:
            user:
              email: OOO@OOO.COM
              password: 12345678
              nickname: ba boo     
    responses:
      '201':
        description: 회원가입 성공
        content:
          application/json:
            schema: 
              $ref: '../components/_index.yaml#/schemas/User'
      '406':
        description: 중복이 아닌 경우 true, 중복인 경우 false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: boolean
                nickname:
                  type: boolean

/signup/google:
  get:
    tags:
      - 회원가입
    description: 구글 회원가입; 토큰을 통해 유저 확인 후 이메일 전송
    operationId: getUserById
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: JWT
        required: true
    responses:
      '200':
        description: 토큰 확인 후 유저 이메일 전송
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

  patch:
    tags:
      - 회원가입
    description: 구글 회원가입, 토큰으로 id 확인 후 더미 데이터 수정
    operationId: updateUserInfo
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: JWT
        required: true
    requestBody:
      description: <!비밀번호!> 제외한 회원 정보 수정
      content:
        application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'  

/login:
  post:
    tags: 
      - 로그인
    description: 로그인
    operationId: getUserToken
    content: application/json
    requestBody:
      description: 이메일, 패스워드
      content:
        application/json:
          schema: 
            type: object
            required: true
            properties:
              email:
                type: string
                format: email
              password:
                type: string
          example:
            user:
              email: OOO@OOO.COM
              password: 12345678
    responses:
      '200':
        description: 로그인 성공 시 프론트로 토큰 전송
        content:
          application/json:
            schema:
              type: object
              requried: true
              properties:
                jwt: 
                  type: string
                  format: JWT

/login/google:
  get:
    tags:
      - 로그인
    description: 구글 로그인
    operationId: getUserToken
    content: application/json
    responses:
      '200':
        description: 구글 연동 성공 시 db에 계정 생성하고 토큰 전달
        content:
          application/json:
            schema:
              type: object
              requried: true
              properties:
                jwt: 
                  type: string
                  format: JWT
                flag:
                  type: boolean

/user:
  get:
    tags:
      - 마이페이지
    summary: Find user by token
    description: 회원 정보 조회
    operationId: getUserInfo
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: JWT
        required: true
    responses:
      '200':
        description: 토큰 확인 후 유저 정보 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

  patch:
    tags:
      - 마이페이지
    summary: Update user profile by userId
    description: <!비밀번호!> 제외한 정보 업데이트
    operationId: updateUserInfo
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: usertoken to be passed as a header
        required: true
    requestBody:
      description: <!비밀번호!> 제외한 회원 정보 수정
      content:
        application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'  
    responses:
      '200':
        description: 토큰 확인 후 수정된 프로필 정보 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '409' :
        description: 변경 전 값과의 충돌

/user/password:
  patch:
    tags:
      - 마이페이지
    summary: Update user password
    operationId: updateUserInfo
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: usertoken to be passed as a header
        required: true
    requestBody:
      description: 비밀번호 수정
      content:
        application/json:
          schema:
            type: object
            required: true
            properties:
              password:
                type: string
                format: password
    responses:
      '200':
        description: 토큰 확인 후 수정 완료
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."  
      '409' :
        description: 변경 전 값과의 충돌

/user/withdrawal:
  patch:
    tags:
      - 마이페이지
    summary: Update user status into withdrawal
    description: 회원 탈퇴
    operationId: updateUserStatus
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: usertoken to be passed as a header
        required: true
    requestBody:
      description: user pw to update status
      content:
        application/json:
          schema: 
            type: object
            required: true
            properties:
              password:
                type: string
                format: password
    responses:
      '200':
        description: 토큰 확인 후 수정 완료
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다." 

/users:
  get:
    tags:
      - 관리자 페이지
    description: 유저 목록 조회
    operationId: getUsers
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: JWT
        required: true
    responses:
      '200':
        description: 토큰 확인 후 유저 목록 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

/users/{userId}:
  get:
    tags:
      - 관리자 페이지
    description: 유저 상세 조회
    operationId: getUserById
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: usertoken to be passed as a header
        required: true
      - name: 유저 고유 id
        in: path
        description: userId
        required: true
    responses:
      '200':
        description: 유저 상세 조회.
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 이상
        content:
          application/json:
            schema:
              type: string
              example: "해당 계정이 존재하지 않습니다."

/reports:
  get:
    tags:
      - 관리자 페이지
    description: 신고 목록 조회
    operationId: getReports
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: JWT
        required: true
    responses:
      '200':
        description: 토큰 확인 후 신고 목록 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/Report'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

/reports/{reportId}:
  get:
    tags:
      - 관리자 페이지
    description: 신고 상세 조회
    operationId: getReportById
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: JWT
        required: true
      - name: 신고 고유 id
        in: path
        description: userId
        required: true
    responses:
      '200':
        description: 신고 상세 조회
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/Report'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 이상
        content:
          application/json:
            schema:
              type: string
              example: "해당 신고가 존재하지 않습니다."
  
/letters/users:
  get:
    tags:
      - 편지
    description: 친구 목록 조회
    operationId: getContactedUsersById
    content: application/json
    parameters:
      - name: Authorization
        in: header
        description: JWT
        required: true
    responses:
      '200':
        description: 토큰 확인 후 대화 기록이 있는 사용자 id 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

/letters{?contact=userId}:
  get:
    tags:
      - 편지
    description: 친구와의 편지 기록 조회
    operationId: getLettersByUserId
    content: application/json
    parameters:
      - name: 대화 상대 id
        in: query
        description: userId
        type: number
        required: true
    responses:
      '200':
        description: 대화 기록 배열(?)로 조회. [row1, row2, ...]
        content:
          application/json:
            schema:
              - $ref: '../components/_index.yaml#/schemas/Letter'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 이상
        content:
          application/json:
            schema:
              type: string
              example: "해당 대화가 존재하지 않습니다."
  patch:
    tags:
      - 편지
    description: 대화 기록 삭제 (아직 구현 X)
    operationId: deleteChat
    content: application/json
    parameters:
      - name: 대화방 고유 id
        in: query
        description: chat_id
        required: true
    responses:
      '200':
        description: 토큰 확인 후 수정 완료
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."  
      '409' :
        description: 변경 전 값과의 충돌
  post:
    tags:
      - 편지
    description: 편지 보내기
    operationId: addLetter
    content: application/json
    parameters:
      - name: 상대 userId
        in: query
        description: userId
        required: true 

/letters{?contact=userId}/{letterId}:
  get:
    tags:
      - 편지
    description: 대화 속 편지 상세 조회
    operationId: getLetterByletterId
    parameters:
      - name: 상대 userId
        in: query
        description: userId
        type: number
        required: true
      - name: 편지 고유 id
        in: path
        description: letterId
        type: number
        required: true
    responses:
      '200':
        description: 대화 속 편지 상세 조회 완료
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/_index.yaml#/schemas/User'
                - $ref: '../components/_index.yaml#/schemas/Letter'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 이상
        content:
          application/json:
            schema:
              type: string
              example: "조회할 수 없는 편지입니다."

/users/search:
  get:
    tags:
      - 메인 화면_검색
    description: 검색 결과 조회
    operationId: getSearchResult
    content: application/json
    parameters:
      - name: 검색
        in: query
        description: 유저 검색
        schema:
          type: string
    response:
      '200':
        description: 유저 상세 조회.
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 이상
        content:
          application/json:
            schema:
              type: string
              example: "검색 결과가 존재하지 않습니다."

/users/search/{userId}:
  get:
    tags:
      - 메인 화면_검색
    description: 검색 결과에서 유저 상세 조회
    operationId: getUserById
    content: application/json
    parameters:
      - name: 대화 상대 id
        in: path
        description: userId
        type: number
        required: true
    response:
      '200':
        description: 유저 상세 조회.
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 이상
        content:
          application/json:
            schema:
              type: string
              example: "해당 유저가 존재하지 않습니다."

/letters{?status=incoming}:
  get:
    tags:
      - 메인 화면_편지
    description: 오고 있는 편지 조회
    operationId: getIncomingLetters
    parameters:
      - name: status=incoming
        in: query
        description: 아직 도착하지 않음
        required: true
      - name: Authorization
        in: header
        description: JWT
        required: true
    responses:
      '200':
        description: 오고 있는 편지 조회 완료
        content:
          application/json:
            schema:
                - $ref: '../components/_index.yaml#/schemas/Letter'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

/letters{?status=arrived}:
  get:
    tags:
      - 메인 화면_편지
    description: 도착한 편지
    operationId: getArrivedLetters
    parameters:
      - name: status=arrived
        in: query
        description: 아직 도착하지 않음
        required: true
      - name: Authorization
        in: header
        description: JWT
        required: true
    responses:
      '200':
        description: 도착한 편지 조회 완료
        content:
          application/json:
            schema:
                - $ref: '../components/_index.yaml#/schemas/Letter'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
  
/letters{?status=arrived}/{letterId}:
  get:
    tags:
      - 메인 화면_편지
    description: 도착한 편지 상세
    operationId: getLetters
    parameters:
      - name: status = arrived
        in: query
        description: 아직 도착하지 않음
        required: true
      - name: 편지 id
        in: path
        description: letterId
        required: true
    responses:
      '200':
        description: 도착한 편지 조회 완료
        content:
          application/json:
            schema:
                - $ref: '../components/_index.yaml#/schemas/Letter'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 오류.
        content:
          application/json:
            schema:
              type: string
              example: "해당 편지가 존재하지 않습니다."

/users/recommend:
  get:
    tags:
      - 메인 화면_추천
    description: 추천된 친구 조회
    operationId: getRecommendedFriends
    parameters:
      - name: Authorization
        in: header
        description: usertoken to be passed as a header
        required: true
    responses:
      '200':
        description: 추천된 친구 조회 완료
        content:
          application/json:
            schema:
                - $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

/users/recommend/{userId}:
  get:
    tags:
      - 메인 화면_추천
    description: 추천된 친구 조회
    operationId: getUserById
    parameters:
      - name: 사용자 id
        in: path
        description: userId
        required: true
    responses:
      '200':
        description: 추천된 친구 조회 완료
        content:
          application/json:
            schema:
                - $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 오류.
        content:
          application/json:
            schema:
              type: string
              example: "해당 유저가 존재하지 않습니다."