/signup:
  post:
    tags:
      - 회원가입
    description: 회원가입
    operationId: addUser
    content: 
      application/json
    required: true
    requestBody:
      description: 이메일, 패스워드, 닉네임, 프로필, (선호는 따로?)
      required: true
      content:
        application/json:
          schema: 
            $ref: '../components/_index.yaml#/schemas/User'
          examples:
            user:
              email: OOO@OOO.COM
              password: 12345678
              nickname: ba boo     
    responses:
      '201':
        description: 회원가입 성공
        content:
          application/json:
            schema: 
              $ref: '../components/_index.yaml#/schemas/User'
      '406':
        description: 중복이 아닌 경우 true, 중복인 경우 false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: boolean
                nickname:
                  type: boolean

/login:
  post:
    tags: 
      - 로그인
    description: 로그인
    operationId: getUserToken
    content: application/json
    requestBody:
      description: 이메일, 패스워드
      content:
        application/json:
          schema: 
            type: object
            required: true
            properties:
              email:
                type: string
                format: email
              password:
                type: string
          example:
            user:
              email: OOO@OOO.COM
              password: 12345678
    responses:
      '200':
        description: 로그인 성공 시 프론트로 토큰 전송
        content:
          application/json:
            schema:
              type: object
              requried: true
              properties:
                jwt: 
                  type: string
                  format: JWT

/user:
  get:
    tags:
      - 마이페이지
    summary: Find user by token
    description: 회원 정보 조회
    operationId: getUserInfo
    content: application/json
    parameters:
      name: Authorization
      in: header
      description: JWT
      required: true
    responses:
      '200':
        description: 토큰 확인 후 유저 정보 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

  put:
    tags:
      - 마이페이지
    summary: Update user profile by user id
    description: 비밀번호 제외한 정보 업데이트
    operationId: updateUserInfo
    content: application/json
    parameters:
      name: Authorization
      in: header
      description: usertoken to be passed as a header
      required: true
    requestBody:
      description: 비밀번호 제외한 회원 정보 수정
      content:
        application/json:
            schema:
              type: object
              requried: true
              properties:
                email:
                  type: string
                  format: email
                nickname:
                  type: string
                  description: 별명
                profile_text:
                  type: string
                  description: 한 줄 소개
                profile_image:
                  type: string
                  description: 프로필 사진(이모지) url
                
    responses:
      '200':
        description: 토큰 확인 후 수정된 프로필 정보 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '409' :
        description: 변경 전 값과의 충돌

/user/password:
  put:
    tags:
      - 마이페이지
    summary: Update user password
    operationId: updateUserInfo
    content: application/json
    parameters:
      name: Authorization
      in: header
      description: usertoken to be passed as a header
      required: true
    requestBody:
      description: 비밀번호 수정
      content:
        application/json:
          schema:
            type: object
            required: true
            properties:
              password:
                type: string
                format: password
    responses:
      '200':
        description: 토큰 확인 후 수정 완료
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."  
      '409' :
        description: 변경 전 값과의 충돌

/user/withdrawal:
  put:
    tags:
      - 마이페이지
    summary: Update user status into withdrawal
    description: 회원 탈퇴
    operationId: updateUserStatus
    content: application/json
    requestBody:
      description: user pw to update status
      content:
        application/json:
          schema: 
            type: object
            required: true
            properties:
              password:
                type: string
                format: password
    responses:
      '200':
        description: 토큰 확인 후 수정 완료
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다." 
      '409' :
        description: 변경 전 값과의 충돌

/admin/users:
  get:
    tags:
      - 관리자 페이지
    description: 유저 목록 조회
    operationId: getUsers
    content: application/json
    parameters:
      name: Authorization
      in: header
      description: JWT
      required: true
    responses:
      '200':
        description: 토큰 확인 후 유저 목록 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

/admin/users/:id:
  get:
    tags:
      - 관리자 페이지
    description: 유저 상세 조회
    operationId: getUserById
    content: application/json
    parameters:
      name: 유저 고유 id
      in: path
      description: user_id
      required: true
    responses:
      '200':
        description: 유저 상세 조회.
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/User'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 이상
        content:
          application/json:
            schema:
              type: string
              example: "해당 계정이 존재하지 않습니다."

/admin/reports:
  get:
    tags:
      - 관리자 페이지
    description: 신고 목록 조회
    operationId: getReports
    content: application/json
    parameters:
      name: Authorization
      in: header
      description: JWT
      required: true
    responses:
      '200':
        description: 토큰 확인 후 신고 목록 전송
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/Report'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."

/admin/reports/:id:
  get:
    tags:
      - 관리자 페이지
    description: 신고 상세 조회
    operationId: getReportById
    content: application/json
    parameters:
      name: 신고 고유 id
      in: path
      description: user_id
      required: true
    responses:
      '200':
        description: 신고 상세 조회
        content:
          application/json:
            schema:
              $ref: '../components/_index.yaml#/schemas/Report'
      '403':
        description: 토큰 오류.
        content:
          application/json:
            schema:
              type: string
              example: "정상적인 토큰이 아닙니다."
      '404':
        description: id 이상
        content:
          application/json:
            schema:
              type: string
              example: "해당 신고가 존재하지 않습니다."
